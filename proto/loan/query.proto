syntax = "proto3";
package loan.loan;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "loan/params.proto";
import "loan/loan.proto";
// this line is used by starport scaffolding # 1

option go_package = "loan/x/loan/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/loan/loan/params";
  }
  // Queries a Loan by id.
	rpc Loan(QueryGetLoanRequest) returns (QueryGetLoanResponse) {
		option (google.api.http).get = "/loan/loan/loan/{id}";
	}

	// Queries a list of Loan items.
	rpc LoanAll(QueryAllLoanRequest) returns (QueryAllLoanResponse) {
		option (google.api.http).get = "/loan/loan/loan";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetLoanRequest {
	uint64 id = 1;
}

message QueryGetLoanResponse {
	Loan Loan = 1 [(gogoproto.nullable) = false];
}

message QueryAllLoanRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLoanResponse {
	repeated Loan Loan = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
